// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Banner {
  id          Int      @id               @default(autoincrement())
  url         String
  created_at  DateTime @default(now())

  @@map("banner")
}

model Sync {
  id               Int      @id               @default(autoincrement())
  label            String
  synchronized_at  DateTime @default(now())

  @@map("sync")
}

model Polling {
  id          Int      @id               @default(autoincrement())
  url         String
  label       String
  created_at  DateTime @default(now())

  @@map("polling")
}

model Kategori {
  id               Int      @id               @default(autoincrement())
  nama             String   @db.VarChar(255)  @unique
  created_at       DateTime @default(now())
  updated_at       DateTime @updatedAt
  active           Boolean  @default(true)

  @@map("kategori")
}

model Produk {
  id                      Int           @id               @default(autoincrement())
  kode_item               String        @db.VarChar(255)  @unique           
  barcode                 String?       @db.VarChar(255)  @unique           
  kode_pabrik             String?       @db.VarChar(255) 
  kode_toko               String?       @db.VarChar(255)
  kode_supplier           String?       @db.VarChar(255)
  nama_produk             String        @db.VarChar(255) 
  nama_produk_asli        String?       @db.VarChar(255)
  nama_produk_sebutan     String?       @db.VarChar(255)
  merk                    String?       @db.VarChar(255)
  tipe                    String?       @db.VarChar(255)
  satuan_besar            String?       @db.VarChar(255)
  satuan_kecil            String?       @db.VarChar(255)
  isi_satuan_besar        String?       @db.VarChar(255)
  kategori                String?       @db.VarChar(255)
  subkategori             String?       @db.VarChar(255)
  konversi                Int?          @db.UnsignedInt
  harga_pokok             Int?          @db.UnsignedInt
  harga_1                 Int?          @db.UnsignedInt
  harga_2                 Int?          @db.UnsignedInt
  harga_3                 Int?          @db.UnsignedInt
  harga_4                 Int?          @db.UnsignedInt
  harga_5                 Int?          @db.UnsignedInt
  harga_6                 Int?          @db.UnsignedInt
  harga_diskon            Int?          @db.UnsignedInt
  berat                   Int?          @db.UnsignedInt
  volume                  Int?          @db.UnsignedInt
  total_stok              Float?        @db.Float()
  slug                    String?       @db.Text
  deskripsi               String?       @db.Text
  active                  Boolean       @default(true)
  created_at              DateTime      @default(now())
  updated_at              DateTime      @updatedAt

  image                   Image[]
  cart                    Cart[]

  @@map("produk")        
}

model Image {
  id                      Int           @id               @default(autoincrement())
  kode_item               String
  url                     String        @db.VarChar(255)
  created_at              DateTime      @default(now())
  updated_at              DateTime      @updatedAt

  produk                  Produk        @relation(fields: [kode_item], references: [kode_item])

  @@map("image")
}

model Operator {
  id               Int      @id               @default(autoincrement())
  nama             String   @db.VarChar(255)
  username         String   @db.VarChar(255)  @unique
  password_encrypt String   @db.VarChar(255)
  password_hash    String   @db.VarChar(255)
  role             String   @db.VarChar(255)
  created_at       DateTime @default(now())
  updated_at       DateTime @updatedAt

  @@map("operator")
}

enum JenisKelamin {
  P
  W
}

model User {
  id               Int              @id               @default(autoincrement())
  user_id          String           @default(uuid())  @unique
  email            String           @db.VarChar(255)  @unique
  nama             String           @db.VarChar(255)
  no_telpon        String           @db.VarChar(255)  @unique
  password_hash    String           @db.VarChar(255)
  tanggal_lahir    String?          @db.VarChar(255)
  jenis_kelamin    JenisKelamin?    

  created_at       DateTime @default(now())
  updated_at       DateTime @updatedAt

  address          Address[]
  cart             Cart[]

  @@map("user")
}



model Address {
  id               Int              @id               @default(autoincrement())
  address_id       String           @default(uuid())  @unique
  user_id          String
  nama_penerima    String           @db.VarChar(255)
  no_telpon        String           @db.VarChar(255)  
  provinsi         String           @db.VarChar(255)
  kota             String           @db.VarChar(255)
  kecamatan        String           @db.VarChar(255)
  alamat_lengkap   String           @db.VarChar(255)
  label            String           @db.VarChar(255)
  kode_pos         String           @db.VarChar(255)
  main_address     Boolean          

  user             User             @relation(fields: [user_id], references: [user_id])
  
  @@map("address")
}

model Cart {
  cart_id          String           @unique
  user_id          String
  kode_item        String
  qty              Float            @db.Float()
  active           Boolean          @default(true)

  produk           Produk           @relation(fields: [kode_item], references: [kode_item])     
  user             User             @relation(fields: [user_id], references: [user_id])

  created_at       DateTime @default(now())
  updated_at       DateTime @updatedAt

  @@map("cart")
}